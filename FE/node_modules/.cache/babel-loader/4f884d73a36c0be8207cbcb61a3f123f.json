{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from \"react\";\nimport { useGestureResponder } from \"react-gesture-responder\";\nimport { animated, interpolate, useSpring } from \"react-spring\";\nimport { GridItemContext } from \"./GridItemContext\";\nexport function GridItem(_a) {\n  var children = _a.children,\n      style = _a.style,\n      className = _a.className,\n      other = tslib_1.__rest(_a, [\"children\", \"style\", \"className\"]);\n\n  var context = React.useContext(GridItemContext);\n\n  if (!context) {\n    throw Error(\"Unable to find GridItem context. Please ensure that GridItem is used as a child of GridDropZone\");\n  }\n\n  var top = context.top,\n      disableDrag = context.disableDrag,\n      endTraverse = context.endTraverse,\n      onStart = context.onStart,\n      mountWithTraverseTarget = context.mountWithTraverseTarget,\n      left = context.left,\n      i = context.i,\n      onMove = context.onMove,\n      onEnd = context.onEnd,\n      grid = context.grid,\n      isDragging = context.dragging;\n  var columnWidth = grid.columnWidth,\n      rowHeight = grid.rowHeight;\n  var dragging = React.useRef(false);\n  var startCoords = React.useRef([left, top]);\n\n  var _b = tslib_1.__read(useSpring(function () {\n    if (mountWithTraverseTarget) {\n      // this feels really brittle. unsure of a better\n      // solution for now.\n      var mountXY = mountWithTraverseTarget;\n      endTraverse();\n      return {\n        xy: mountXY,\n        immediate: true,\n        zIndex: \"1\",\n        scale: 1.1,\n        opacity: 0.8\n      };\n    }\n\n    return {\n      xy: [left, top],\n      immediate: true,\n      zIndex: \"0\",\n      scale: 1,\n      opacity: 1\n    };\n  }), 2),\n      styles = _b[0],\n      set = _b[1]; // handle move updates imperatively\n\n\n  function handleMove(state, e) {\n    var x = startCoords.current[0] + state.delta[0];\n    var y = startCoords.current[1] + state.delta[1];\n    set({\n      xy: [x, y],\n      zIndex: \"1\",\n      immediate: true,\n      opacity: 0.8,\n      scale: 1.1\n    });\n    onMove(state, x, y);\n  } // handle end of drag\n\n\n  function handleEnd(state) {\n    var x = startCoords.current[0] + state.delta[0];\n    var y = startCoords.current[1] + state.delta[1];\n    dragging.current = false;\n    onEnd(state, x, y);\n  }\n\n  var bind = useGestureResponder({\n    onMoveShouldSet: function (state) {\n      if (disableDrag) {\n        return false;\n      }\n\n      onStart();\n      startCoords.current = [left, top];\n      dragging.current = true;\n      return true;\n    },\n    onMove: handleMove,\n    onTerminationRequest: function () {\n      if (dragging.current) {\n        return false;\n      }\n\n      return true;\n    },\n    onTerminate: handleEnd,\n    onRelease: handleEnd\n  }, {\n    enableMouse: true\n  }).bind;\n  /**\n   * Update our position when left or top\n   * values change\n   */\n\n  React.useEffect(function () {\n    if (!dragging.current) {\n      set({\n        xy: [left, top],\n        zIndex: \"0\",\n        opacity: 1,\n        scale: 1,\n        immediate: false\n      });\n    }\n  }, [dragging.current, left, top]);\n\n  var props = tslib_1.__assign({\n    className: \"GridItem\" + (isDragging ? \" dragging\" : \"\") + (!!disableDrag ? \" disabled\" : \"\") + className ? \" \" + className : \"\"\n  }, bind, {\n    style: tslib_1.__assign({\n      cursor: !!disableDrag ? \"grab\" : undefined,\n      zIndex: styles.zIndex,\n      position: \"absolute\",\n      width: columnWidth + \"px\",\n      opacity: styles.opacity,\n      height: rowHeight + \"px\",\n      boxSizing: \"border-box\",\n      transform: interpolate([styles.xy, styles.scale], function (xy, s) {\n        return \"translate3d(\" + xy[0] + \"px, \" + xy[1] + \"px, 0) scale(\" + s + \")\";\n      })\n    }, style)\n  }, other);\n\n  return typeof children === \"function\" ? children(animated.div, props, {\n    dragging: isDragging,\n    disabled: !!disableDrag,\n    i: i,\n    grid: grid\n  }) : React.createElement(animated.div, tslib_1.__assign({}, props), children);\n}","map":{"version":3,"sources":["/Users/sirajmsm/Desktop/gapstarpro/photo-grid-app/FE/node_modules/react-grid-dnd/esm/GridItem.js"],"names":["tslib_1","React","useGestureResponder","animated","interpolate","useSpring","GridItemContext","GridItem","_a","children","style","className","other","__rest","context","useContext","Error","top","disableDrag","endTraverse","onStart","mountWithTraverseTarget","left","i","onMove","onEnd","grid","isDragging","dragging","columnWidth","rowHeight","useRef","startCoords","_b","__read","mountXY","xy","immediate","zIndex","scale","opacity","styles","set","handleMove","state","e","x","current","delta","y","handleEnd","bind","onMoveShouldSet","onTerminationRequest","onTerminate","onRelease","enableMouse","useEffect","props","__assign","cursor","undefined","position","width","height","boxSizing","transform","s","div","disabled","createElement"],"mappings":"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","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport * as React from \"react\";\nimport { useGestureResponder } from \"react-gesture-responder\";\nimport { animated, interpolate, useSpring } from \"react-spring\";\nimport { GridItemContext } from \"./GridItemContext\";\nexport function GridItem(_a) {\n    var children = _a.children, style = _a.style, className = _a.className, other = tslib_1.__rest(_a, [\"children\", \"style\", \"className\"]);\n    var context = React.useContext(GridItemContext);\n    if (!context) {\n        throw Error(\"Unable to find GridItem context. Please ensure that GridItem is used as a child of GridDropZone\");\n    }\n    var top = context.top, disableDrag = context.disableDrag, endTraverse = context.endTraverse, onStart = context.onStart, mountWithTraverseTarget = context.mountWithTraverseTarget, left = context.left, i = context.i, onMove = context.onMove, onEnd = context.onEnd, grid = context.grid, isDragging = context.dragging;\n    var columnWidth = grid.columnWidth, rowHeight = grid.rowHeight;\n    var dragging = React.useRef(false);\n    var startCoords = React.useRef([left, top]);\n    var _b = tslib_1.__read(useSpring(function () {\n        if (mountWithTraverseTarget) {\n            // this feels really brittle. unsure of a better\n            // solution for now.\n            var mountXY = mountWithTraverseTarget;\n            endTraverse();\n            return {\n                xy: mountXY,\n                immediate: true,\n                zIndex: \"1\",\n                scale: 1.1,\n                opacity: 0.8\n            };\n        }\n        return {\n            xy: [left, top],\n            immediate: true,\n            zIndex: \"0\",\n            scale: 1,\n            opacity: 1\n        };\n    }), 2), styles = _b[0], set = _b[1];\n    // handle move updates imperatively\n    function handleMove(state, e) {\n        var x = startCoords.current[0] + state.delta[0];\n        var y = startCoords.current[1] + state.delta[1];\n        set({\n            xy: [x, y],\n            zIndex: \"1\",\n            immediate: true,\n            opacity: 0.8,\n            scale: 1.1\n        });\n        onMove(state, x, y);\n    }\n    // handle end of drag\n    function handleEnd(state) {\n        var x = startCoords.current[0] + state.delta[0];\n        var y = startCoords.current[1] + state.delta[1];\n        dragging.current = false;\n        onEnd(state, x, y);\n    }\n    var bind = useGestureResponder({\n        onMoveShouldSet: function (state) {\n            if (disableDrag) {\n                return false;\n            }\n            onStart();\n            startCoords.current = [left, top];\n            dragging.current = true;\n            return true;\n        },\n        onMove: handleMove,\n        onTerminationRequest: function () {\n            if (dragging.current) {\n                return false;\n            }\n            return true;\n        },\n        onTerminate: handleEnd,\n        onRelease: handleEnd\n    }, {\n        enableMouse: true\n    }).bind;\n    /**\n     * Update our position when left or top\n     * values change\n     */\n    React.useEffect(function () {\n        if (!dragging.current) {\n            set({\n                xy: [left, top],\n                zIndex: \"0\",\n                opacity: 1,\n                scale: 1,\n                immediate: false\n            });\n        }\n    }, [dragging.current, left, top]);\n    var props = tslib_1.__assign({ className: \"GridItem\" +\n            (isDragging ? \" dragging\" : \"\") +\n            (!!disableDrag ? \" disabled\" : \"\") +\n            className\n            ? \" \" + className\n            : \"\" }, bind, { style: tslib_1.__assign({ cursor: !!disableDrag ? \"grab\" : undefined, zIndex: styles.zIndex, position: \"absolute\", width: columnWidth + \"px\", opacity: styles.opacity, height: rowHeight + \"px\", boxSizing: \"border-box\", transform: interpolate([styles.xy, styles.scale], function (xy, s) {\n                return \"translate3d(\" + xy[0] + \"px, \" + xy[1] + \"px, 0) scale(\" + s + \")\";\n            }) }, style) }, other);\n    return typeof children === \"function\" ? (children(animated.div, props, {\n        dragging: isDragging,\n        disabled: !!disableDrag,\n        i: i,\n        grid: grid\n    })) : (React.createElement(animated.div, tslib_1.__assign({}, props), children));\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from \"react\";\nimport { useMeasure } from \"./use-measure\";\nimport { GridContext } from \"./GridContext\";\nimport { swap } from \"./swap\";\nimport { getPositionForIndex, getTargetIndex } from \"./helpers\";\nimport { GridItemContext } from \"./GridItemContext\";\nexport function GridDropZone(_a) {\n  var id = _a.id,\n      boxesPerRow = _a.boxesPerRow,\n      children = _a.children,\n      style = _a.style,\n      _b = _a.disableDrag,\n      disableDrag = _b === void 0 ? false : _b,\n      _c = _a.disableDrop,\n      disableDrop = _c === void 0 ? false : _c,\n      rowHeight = _a.rowHeight,\n      other = tslib_1.__rest(_a, [\"id\", \"boxesPerRow\", \"children\", \"style\", \"disableDrag\", \"disableDrop\", \"rowHeight\"]);\n\n  var _d = React.useContext(GridContext),\n      traverse = _d.traverse,\n      startTraverse = _d.startTraverse,\n      endTraverse = _d.endTraverse,\n      register = _d.register,\n      measureAll = _d.measureAll,\n      onChange = _d.onChange,\n      remove = _d.remove,\n      getActiveDropId = _d.getActiveDropId;\n\n  var ref = React.useRef(null);\n\n  var _e = useMeasure(ref),\n      bounds = _e.bounds,\n      remeasure = _e.remeasure;\n\n  var _f = tslib_1.__read(React.useState(null), 2),\n      draggingIndex = _f[0],\n      setDraggingIndex = _f[1];\n\n  var _g = tslib_1.__read(React.useState(null), 2),\n      placeholder = _g[0],\n      setPlaceholder = _g[1];\n\n  var traverseIndex = traverse && !traverse.execute && traverse.targetId === id ? traverse.targetIndex : null;\n  var grid = {\n    columnWidth: bounds.width / boxesPerRow,\n    boxesPerRow: boxesPerRow,\n    rowHeight: rowHeight\n  };\n  var childCount = React.Children.count(children);\n  /**\n   * Register our dropzone with our grid context\n   */\n\n  React.useEffect(function () {\n    register(id, {\n      top: bounds.top,\n      bottom: bounds.bottom,\n      left: bounds.left,\n      right: bounds.right,\n      width: bounds.width,\n      height: bounds.height,\n      count: childCount,\n      grid: grid,\n      disableDrop: disableDrop,\n      remeasure: remeasure\n    });\n  }, [childCount, disableDrop, bounds, id, grid]);\n  /**\n   * Unregister when unmounting\n   */\n\n  React.useEffect(function () {\n    return function () {\n      return remove(id);\n    };\n  }, [id]); // keep an initial list of our item indexes. We use this\n  // when animating swap positions on drag events\n\n  var itemsIndexes = React.Children.map(children, function (_, i) {\n    return i;\n  });\n  return React.createElement(\"div\", tslib_1.__assign({\n    ref: ref,\n    style: tslib_1.__assign({\n      position: \"relative\"\n    }, style)\n  }, other), grid.columnWidth === 0 ? null : React.Children.map(children, function (child, i) {\n    var isTraverseTarget = traverse && traverse.targetId === id && traverse.targetIndex === i;\n    var order = placeholder ? swap(itemsIndexes, placeholder.startIndex, placeholder.targetIndex) : itemsIndexes;\n    var pos = getPositionForIndex(order.indexOf(i), grid, traverseIndex);\n    /**\n     * Handle a child being dragged\n     * @param state\n     * @param x\n     * @param y\n     */\n\n    function onMove(state, x, y) {\n      if (!ref.current) return;\n\n      if (draggingIndex !== i) {\n        setDraggingIndex(i);\n      }\n\n      var targetDropId = getActiveDropId(id, x + grid.columnWidth / 2, y + grid.rowHeight / 2);\n\n      if (targetDropId && targetDropId !== id) {\n        startTraverse(id, targetDropId, x, y, i);\n      } else {\n        endTraverse();\n      }\n\n      var targetIndex = targetDropId !== id ? childCount : getTargetIndex(i, grid, childCount, state.delta[0], state.delta[1]);\n\n      if (targetIndex !== i) {\n        if (placeholder && placeholder.targetIndex !== targetIndex || !placeholder) {\n          setPlaceholder({\n            targetIndex: targetIndex,\n            startIndex: i\n          });\n        }\n      } else if (placeholder) {\n        setPlaceholder(null);\n      }\n    }\n    /**\n     * Handle drag end events\n     */\n\n\n    function onEnd(state, x, y) {\n      var targetDropId = getActiveDropId(id, x + grid.columnWidth / 2, y + grid.rowHeight / 2);\n      var targetIndex = targetDropId !== id ? childCount : getTargetIndex(i, grid, childCount, state.delta[0], state.delta[1]); // traverse?\n\n      if (traverse) {\n        onChange(traverse.sourceId, traverse.sourceIndex, traverse.targetIndex, traverse.targetId);\n      } else {\n        onChange(id, i, targetIndex);\n      }\n\n      setPlaceholder(null);\n      setDraggingIndex(null);\n    }\n\n    function onStart() {\n      measureAll();\n    }\n\n    return React.createElement(GridItemContext.Provider, {\n      value: {\n        top: pos.xy[1],\n        disableDrag: disableDrag,\n        endTraverse: endTraverse,\n        mountWithTraverseTarget: isTraverseTarget ? [traverse.tx, traverse.ty] : undefined,\n        left: pos.xy[0],\n        i: i,\n        onMove: onMove,\n        onEnd: onEnd,\n        onStart: onStart,\n        grid: grid,\n        dragging: i === draggingIndex\n      }\n    }, child);\n  }));\n}","map":{"version":3,"sources":["/Users/sirajmsm/Desktop/gapstarpro/photo-grid-app/FE/node_modules/react-grid-dnd/esm/GridDropZone.js"],"names":["tslib_1","React","useMeasure","GridContext","swap","getPositionForIndex","getTargetIndex","GridItemContext","GridDropZone","_a","id","boxesPerRow","children","style","_b","disableDrag","_c","disableDrop","rowHeight","other","__rest","_d","useContext","traverse","startTraverse","endTraverse","register","measureAll","onChange","remove","getActiveDropId","ref","useRef","_e","bounds","remeasure","_f","__read","useState","draggingIndex","setDraggingIndex","_g","placeholder","setPlaceholder","traverseIndex","execute","targetId","targetIndex","grid","columnWidth","width","childCount","Children","count","useEffect","top","bottom","left","right","height","itemsIndexes","map","_","i","createElement","__assign","position","child","isTraverseTarget","order","startIndex","pos","indexOf","onMove","state","x","y","current","targetDropId","delta","onEnd","sourceId","sourceIndex","onStart","Provider","value","xy","mountWithTraverseTarget","tx","ty","undefined","dragging"],"mappings":"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","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport * as React from \"react\";\nimport { useMeasure } from \"./use-measure\";\nimport { GridContext } from \"./GridContext\";\nimport { swap } from \"./swap\";\nimport { getPositionForIndex, getTargetIndex } from \"./helpers\";\nimport { GridItemContext } from \"./GridItemContext\";\nexport function GridDropZone(_a) {\n    var id = _a.id, boxesPerRow = _a.boxesPerRow, children = _a.children, style = _a.style, _b = _a.disableDrag, disableDrag = _b === void 0 ? false : _b, _c = _a.disableDrop, disableDrop = _c === void 0 ? false : _c, rowHeight = _a.rowHeight, other = tslib_1.__rest(_a, [\"id\", \"boxesPerRow\", \"children\", \"style\", \"disableDrag\", \"disableDrop\", \"rowHeight\"]);\n    var _d = React.useContext(GridContext), traverse = _d.traverse, startTraverse = _d.startTraverse, endTraverse = _d.endTraverse, register = _d.register, measureAll = _d.measureAll, onChange = _d.onChange, remove = _d.remove, getActiveDropId = _d.getActiveDropId;\n    var ref = React.useRef(null);\n    var _e = useMeasure(ref), bounds = _e.bounds, remeasure = _e.remeasure;\n    var _f = tslib_1.__read(React.useState(null), 2), draggingIndex = _f[0], setDraggingIndex = _f[1];\n    var _g = tslib_1.__read(React.useState(null), 2), placeholder = _g[0], setPlaceholder = _g[1];\n    var traverseIndex = traverse && !traverse.execute && traverse.targetId === id\n        ? traverse.targetIndex\n        : null;\n    var grid = {\n        columnWidth: bounds.width / boxesPerRow,\n        boxesPerRow: boxesPerRow,\n        rowHeight: rowHeight\n    };\n    var childCount = React.Children.count(children);\n    /**\n     * Register our dropzone with our grid context\n     */\n    React.useEffect(function () {\n        register(id, {\n            top: bounds.top,\n            bottom: bounds.bottom,\n            left: bounds.left,\n            right: bounds.right,\n            width: bounds.width,\n            height: bounds.height,\n            count: childCount,\n            grid: grid,\n            disableDrop: disableDrop,\n            remeasure: remeasure\n        });\n    }, [childCount, disableDrop, bounds, id, grid]);\n    /**\n     * Unregister when unmounting\n     */\n    React.useEffect(function () {\n        return function () { return remove(id); };\n    }, [id]);\n    // keep an initial list of our item indexes. We use this\n    // when animating swap positions on drag events\n    var itemsIndexes = React.Children.map(children, function (_, i) { return i; });\n    return (React.createElement(\"div\", tslib_1.__assign({ ref: ref, style: tslib_1.__assign({ position: \"relative\" }, style) }, other), grid.columnWidth === 0\n        ? null\n        : React.Children.map(children, function (child, i) {\n            var isTraverseTarget = traverse &&\n                traverse.targetId === id &&\n                traverse.targetIndex === i;\n            var order = placeholder\n                ? swap(itemsIndexes, placeholder.startIndex, placeholder.targetIndex)\n                : itemsIndexes;\n            var pos = getPositionForIndex(order.indexOf(i), grid, traverseIndex);\n            /**\n             * Handle a child being dragged\n             * @param state\n             * @param x\n             * @param y\n             */\n            function onMove(state, x, y) {\n                if (!ref.current)\n                    return;\n                if (draggingIndex !== i) {\n                    setDraggingIndex(i);\n                }\n                var targetDropId = getActiveDropId(id, x + grid.columnWidth / 2, y + grid.rowHeight / 2);\n                if (targetDropId && targetDropId !== id) {\n                    startTraverse(id, targetDropId, x, y, i);\n                }\n                else {\n                    endTraverse();\n                }\n                var targetIndex = targetDropId !== id\n                    ? childCount\n                    : getTargetIndex(i, grid, childCount, state.delta[0], state.delta[1]);\n                if (targetIndex !== i) {\n                    if ((placeholder && placeholder.targetIndex !== targetIndex) ||\n                        !placeholder) {\n                        setPlaceholder({\n                            targetIndex: targetIndex,\n                            startIndex: i\n                        });\n                    }\n                }\n                else if (placeholder) {\n                    setPlaceholder(null);\n                }\n            }\n            /**\n             * Handle drag end events\n             */\n            function onEnd(state, x, y) {\n                var targetDropId = getActiveDropId(id, x + grid.columnWidth / 2, y + grid.rowHeight / 2);\n                var targetIndex = targetDropId !== id\n                    ? childCount\n                    : getTargetIndex(i, grid, childCount, state.delta[0], state.delta[1]);\n                // traverse?\n                if (traverse) {\n                    onChange(traverse.sourceId, traverse.sourceIndex, traverse.targetIndex, traverse.targetId);\n                }\n                else {\n                    onChange(id, i, targetIndex);\n                }\n                setPlaceholder(null);\n                setDraggingIndex(null);\n            }\n            function onStart() {\n                measureAll();\n            }\n            return (React.createElement(GridItemContext.Provider, { value: {\n                    top: pos.xy[1],\n                    disableDrag: disableDrag,\n                    endTraverse: endTraverse,\n                    mountWithTraverseTarget: isTraverseTarget\n                        ? [traverse.tx, traverse.ty]\n                        : undefined,\n                    left: pos.xy[0],\n                    i: i,\n                    onMove: onMove,\n                    onEnd: onEnd,\n                    onStart: onStart,\n                    grid: grid,\n                    dragging: i === draggingIndex\n                } }, child));\n        })));\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/sirajmsm/Desktop/gapstarpro/photo-grid-app/FE/src/components/PhotosComponent/Photos.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllPhotos, getSelectedPhotos, addPhotos } from \"../../redux/actions/photos\";\nimport PhotoList from \"../PhotoListComponent/PhotosList\";\nimport PhotoGrid from \"../PhotoGridComponent/PhotoGrid\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Photos = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const allPhotos = useSelector(state => state.photos.photos);\n  const selectedPhotos = useSelector(state => state.photos.selectedPhotos);\n  const user = useSelector(state => state.photos.user);\n  useEffect(() => {\n    dispatch(getAllPhotos());\n  }, []);\n\n  const _onSelectImage = (index, image) => {\n    let imgs = allPhotos;\n    var img = imgs[index];\n\n    if (selectedPhotos.length < 9) {\n      if (img.hasOwnProperty(\"isSelected\")) img.isSelected = !img.isSelected;else img.isSelected = true;\n      let selectedImages = imgs.filter(img => img.isSelected);\n      dispatch(getSelectedPhotos(selectedImages));\n      let favouritePhotos = {\n        userId: user.id,\n        favouritePhotos: selectedImages.map(img => img.src)\n      };\n      dispatch(addPhotos(favouritePhotos));\n    } else {\n      const notify = () => toast.error(\"Maximum Limit Exceed\", {\n        position: \"top-center\"\n      });\n\n      return notify();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          class: \"navbar navbar-light bg-light\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"navbar-text heading-text\",\n            children: selectedPhotos.length < 9 ? `Please select your favourite ${9 - selectedPhotos.length} images.` : `Thank you for your selection.`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(PhotoList, {\n          onSelectImage: _onSelectImage,\n          images: allPhotos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-10\",\n        style: {\n          justifyContent: \"center\",\n          textAlign: \"center\"\n        },\n        children: [selectedPhotos.length > 0 && /*#__PURE__*/_jsxDEV(PhotoGrid, {\n          items: selectedPhotos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Photos, \"CTxTTvlidZdsHqIv3u4KD5IwN6g=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Photos;\nexport default Photos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Photos\");","map":{"version":3,"sources":["/Users/sirajmsm/Desktop/gapstarpro/photo-grid-app/FE/src/components/PhotosComponent/Photos.jsx"],"names":["React","useEffect","useSelector","useDispatch","getAllPhotos","getSelectedPhotos","addPhotos","PhotoList","PhotoGrid","ToastContainer","toast","Photos","dispatch","allPhotos","state","photos","selectedPhotos","user","_onSelectImage","index","image","imgs","img","length","hasOwnProperty","isSelected","selectedImages","filter","favouritePhotos","userId","id","map","src","notify","error","position","justifyContent","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getAllPhotos,\n  getSelectedPhotos,\n  addPhotos,\n} from \"../../redux/actions/photos\";\nimport PhotoList from \"../PhotoListComponent/PhotosList\";\nimport PhotoGrid from \"../PhotoGridComponent/PhotoGrid\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport \"./style.css\";\n\nconst Photos = () => {\n  const dispatch = useDispatch();\n  const allPhotos = useSelector((state) => state.photos.photos);\n  const selectedPhotos = useSelector((state) => state.photos.selectedPhotos);\n  const user = useSelector((state) => state.photos.user);\n\n  useEffect(() => {\n    dispatch(getAllPhotos());\n  }, []);\n\n  const _onSelectImage = (index, image) => {\n    let imgs = allPhotos;\n    var img = imgs[index];\n    if (selectedPhotos.length < 9) {\n      if (img.hasOwnProperty(\"isSelected\")) img.isSelected = !img.isSelected;\n      else img.isSelected = true;\n      let selectedImages = imgs.filter((img) => img.isSelected);\n      dispatch(getSelectedPhotos(selectedImages));\n      let favouritePhotos = {\n        userId: user.id,\n        favouritePhotos: selectedImages.map(img=>img.src),\n      };\n      dispatch(addPhotos(favouritePhotos));\n    } else {\n      const notify = () =>\n        toast.error(\"Maximum Limit Exceed\", { position: \"top-center\" });\n      return notify();\n    }\n  };\n\n  return (\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <nav class=\"navbar navbar-light bg-light\">\n            <span class=\"navbar-text heading-text\">\n              {selectedPhotos.length < 9\n                ? `Please select your favourite ${\n                    9 - selectedPhotos.length\n                  } images.`\n                : `Thank you for your selection.`}\n            </span>\n          </nav>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-2\">\n          <PhotoList onSelectImage={_onSelectImage} images={allPhotos} />\n        </div>\n        <div\n          class=\"col-10\"\n          style={{ justifyContent: \"center\", textAlign: \"center\" }}\n        >\n          {selectedPhotos.length > 0 && <PhotoGrid items={selectedPhotos} />}\n          <ToastContainer />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Photos;\n"]},"metadata":{},"sourceType":"module"}
{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as React from \"react\";\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\nexport function useMeasure(ref) {\r\n    var _a = tslib_1.__read(React.useState({\r\n        left: 0,\r\n        top: 0,\r\n        width: 0,\r\n        height: 0,\r\n        right: 0,\r\n        bottom: 0\r\n    }), 2), bounds = _a[0], setBounds = _a[1];\r\n    var _b = tslib_1.__read(React.useState(function () {\r\n        return new ResizeObserver(function (_a) {\r\n            var _b = tslib_1.__read(_a, 1), entry = _b[0];\r\n            setBounds(entry.target.getBoundingClientRect());\r\n        });\r\n    }), 1), observer = _b[0];\r\n    React.useLayoutEffect(function () {\r\n        if (ref.current) {\r\n            observer.observe(ref.current);\r\n        }\r\n        return function () { return observer.disconnect(); };\r\n    }, [ref, observer]);\r\n    function remeasure() {\r\n        setBounds(ref.current.getBoundingClientRect());\r\n    }\r\n    return { bounds: bounds, remeasure: remeasure };\r\n}\r\n","dts":{"name":"/Users/benmcmahen/open-source/react-grid-dnd/use-measure.d.ts","writeByteOrderMark":false,"text":"import * as React from \"react\";\r\nexport interface Bounds {\r\n    left: number;\r\n    height: number;\r\n    top: number;\r\n    right: number;\r\n    bottom: number;\r\n    width: number;\r\n}\r\nexport declare function useMeasure(ref: React.RefObject<HTMLDivElement | null>): {\r\n    bounds: Bounds;\r\n    remeasure: () => void;\r\n};\r\n"}}
